// automatically generated by admSerialization.py, do not edit!
#include "ADM_default.h"
#include "ADM_paramList.h"
#include "ADM_coreJson.h"
#include "fadeThrough.h"
bool  fadeThrough_jserialize(const char *file, const fadeThrough *key){
admJson json;
json.addUint32("startTime",key->startTime);
json.addUint32("endTime",key->endTime);
json.addBool("enableBright",key->enableBright);
json.addBool("enableSat",key->enableSat);
json.addBool("enableBlend",key->enableBlend);
json.addBool("enableBlur",key->enableBlur);
json.addBool("enableRot",key->enableRot);
json.addBool("enableZoom",key->enableZoom);
json.addBool("enableVignette",key->enableVignette);
json.addUint32("rgbColorBlend",key->rgbColorBlend);
json.addUint32("rgbColorVignette",key->rgbColorVignette);
json.addFloat("peakBright",key->peakBright);
json.addFloat("peakSat",key->peakSat);
json.addFloat("peakBlend",key->peakBlend);
json.addFloat("peakBlur",key->peakBlur);
json.addFloat("peakRot",key->peakRot);
json.addFloat("peakZoom",key->peakZoom);
json.addFloat("peakVignette",key->peakVignette);
json.addUint32("transientBright",key->transientBright);
json.addUint32("transientSat",key->transientSat);
json.addUint32("transientBlend",key->transientBlend);
json.addUint32("transientBlur",key->transientBlur);
json.addUint32("transientRot",key->transientRot);
json.addUint32("transientZoom",key->transientZoom);
json.addUint32("transientVignette",key->transientVignette);
json.addFloat("transientDurationBright",key->transientDurationBright);
json.addFloat("transientDurationSat",key->transientDurationSat);
json.addFloat("transientDurationBlend",key->transientDurationBlend);
json.addFloat("transientDurationBlur",key->transientDurationBlur);
json.addFloat("transientDurationRot",key->transientDurationRot);
json.addFloat("transientDurationZoom",key->transientDurationZoom);
json.addFloat("transientDurationVignette",key->transientDurationVignette);
return json.dumpToFile(file);
};
bool  fadeThrough_jdeserialize(const char *file, const ADM_paramList *tmpl,fadeThrough *key){
admJsonToCouple json;
CONFcouple *c=json.readFromFile(file);
if(!c) {ADM_error("Cannot read json file");return false;}
bool r= ADM_paramLoadPartial(c,tmpl,key);
delete c;
return r;
};
