// automatically generated by admSerialization.py, do not edit!
#include "ADM_default.h"
#include "ADM_paramList.h"
#include "ADM_coreJson.h"
#include "artChromaHold.h"
bool  artChromaHold_jserialize(const char *file, const artChromaHold *key){
admJson json;
json.addBool("c1en",key->c1en);
json.addFloat("c1u",key->c1u);
json.addFloat("c1v",key->c1v);
json.addFloat("c1dist",key->c1dist);
json.addFloat("c1slope",key->c1slope);
json.addBool("c2en",key->c2en);
json.addFloat("c2u",key->c2u);
json.addFloat("c2v",key->c2v);
json.addFloat("c2dist",key->c2dist);
json.addFloat("c2slope",key->c2slope);
json.addBool("c3en",key->c3en);
json.addFloat("c3u",key->c3u);
json.addFloat("c3v",key->c3v);
json.addFloat("c3dist",key->c3dist);
json.addFloat("c3slope",key->c3slope);
return json.dumpToFile(file);
};
bool  artChromaHold_jdeserialize(const char *file, const ADM_paramList *tmpl,artChromaHold *key){
admJsonToCouple json;
CONFcouple *c=json.readFromFile(file);
if(!c) {ADM_error("Cannot read json file");return false;}
bool r= ADM_paramLoadPartial(c,tmpl,key);
delete c;
return r;
};
